--- a/net/minecraft/client/Options.java
+++ b/net/minecraft/client/Options.java
@@ -139,7 +_,7 @@
    public final KeyMapping[] f_92056_ = new KeyMapping[]{new KeyMapping("key.hotbar.1", 49, "key.categories.inventory"), new KeyMapping("key.hotbar.2", 50, "key.categories.inventory"), new KeyMapping("key.hotbar.3", 51, "key.categories.inventory"), new KeyMapping("key.hotbar.4", 52, "key.categories.inventory"), new KeyMapping("key.hotbar.5", 53, "key.categories.inventory"), new KeyMapping("key.hotbar.6", 54, "key.categories.inventory"), new KeyMapping("key.hotbar.7", 55, "key.categories.inventory"), new KeyMapping("key.hotbar.8", 56, "key.categories.inventory"), new KeyMapping("key.hotbar.9", 57, "key.categories.inventory")};
    public final KeyMapping f_92057_ = new KeyMapping("key.saveToolbarActivator", 67, "key.categories.creative");
    public final KeyMapping f_92058_ = new KeyMapping("key.loadToolbarActivator", 88, "key.categories.creative");
-   public final KeyMapping[] f_92059_ = ArrayUtils.addAll(new KeyMapping[]{this.f_92096_, this.f_92095_, this.f_92085_, this.f_92086_, this.f_92087_, this.f_92088_, this.f_92089_, this.f_92090_, this.f_92091_, this.f_92094_, this.f_92092_, this.f_92098_, this.f_92099_, this.f_92097_, this.f_92100_, this.f_92101_, this.f_92102_, this.f_92103_, this.f_92104_, this.f_92105_, this.f_92054_, this.f_92093_, this.f_92057_, this.f_92058_, this.f_92055_}, this.f_92056_);
+   public KeyMapping[] f_92059_ = ArrayUtils.addAll(new KeyMapping[]{this.f_92096_, this.f_92095_, this.f_92085_, this.f_92086_, this.f_92087_, this.f_92088_, this.f_92089_, this.f_92090_, this.f_92091_, this.f_92094_, this.f_92092_, this.f_92098_, this.f_92099_, this.f_92097_, this.f_92100_, this.f_92101_, this.f_92102_, this.f_92103_, this.f_92104_, this.f_92105_, this.f_92054_, this.f_92093_, this.f_92057_, this.f_92058_, this.f_92055_}, this.f_92056_);
    protected Minecraft f_92060_;
    private final File f_92110_;
    public Difficulty f_92061_ = Difficulty.NORMAL;
@@ -161,6 +_,7 @@
    public boolean f_92076_;
 
    public Options(Minecraft p_92138_, File p_92139_) {
+      setForgeKeybindProperties();
       this.f_92060_ = p_92138_;
       this.f_92110_ = new File(p_92139_, "options.txt");
       if (p_92138_.m_91103_() && Runtime.getRuntime().maxMemory() >= 1000000000L) {
@@ -201,12 +_,12 @@
          CompoundTag compoundtag = new CompoundTag();
 
          try (BufferedReader bufferedreader = Files.newReader(this.f_92110_, Charsets.UTF_8)) {
-            bufferedreader.lines().forEach((p_92168_) -> {
+            bufferedreader.lines().forEach((p_230004_1_) -> {
                try {
-                  Iterator<String> iterator = f_92107_.split(p_92168_).iterator();
+                  Iterator<String> iterator = f_92107_.split(p_230004_1_).iterator();
                   compoundtag.m_128359_(iterator.next(), iterator.next());
                } catch (Exception exception2) {
-                  f_92077_.warn("Skipping bad option: {}", (Object)p_92168_);
+                  f_92077_.warn("Skipping bad option: {}", (Object)p_230004_1_);
                }
 
             });
@@ -520,7 +_,11 @@
 
                for(KeyMapping keymapping : this.f_92059_) {
                   if (s.equals("key_" + keymapping.m_90860_())) {
-                     keymapping.m_90848_(InputConstants.m_84851_(s1));
+                     if (s1.indexOf(':') != -1) {
+                        String[] pts = s1.split(":");
+                        keymapping.setKeyModifierAndCode(net.minecraftforge.client.settings.KeyModifier.valueFromString(pts[1]), InputConstants.m_84851_(pts[0]));
+                     } else
+                        keymapping.setKeyModifierAndCode(net.minecraftforge.client.settings.KeyModifier.NONE, InputConstants.m_84851_(s1));
                   }
                }
 
@@ -567,6 +_,7 @@
    }
 
    public void m_92169_() {
+      if (net.minecraftforge.fml.client.ClientModLoader.isLoading()) return; //Don't save settings before mods add keybindigns and the like to prevent them from being deleted.
       try (PrintWriter printwriter = new PrintWriter(new OutputStreamWriter(new FileOutputStream(this.f_92110_), StandardCharsets.UTF_8))) {
          printwriter.println("version:" + SharedConstants.m_136187_().getWorldVersion());
          printwriter.println("autoJump:" + Option.f_91631_.m_90545_(this));
@@ -652,7 +_,7 @@
          printwriter.println("syncChunkWrites:" + this.f_92076_);
 
          for(KeyMapping keymapping : this.f_92059_) {
-            printwriter.println("key_" + keymapping.m_90860_() + ":" + keymapping.m_90865_());
+            printwriter.println("key_" + keymapping.m_90860_() + ":" + keymapping.m_90865_() + (keymapping.getKeyModifier() != net.minecraftforge.client.settings.KeyModifier.NONE ? ":" + keymapping.getKeyModifier() : ""));
          }
 
          for(SoundSource soundsource : SoundSource.values()) {
@@ -749,6 +_,23 @@
       }
 
       p_92146_.m_10509_(set);
+   }
+
+   private void setForgeKeybindProperties() {
+      net.minecraftforge.client.settings.KeyConflictContext inGame = net.minecraftforge.client.settings.KeyConflictContext.IN_GAME;
+      f_92085_.setKeyConflictContext(inGame);
+      f_92086_.setKeyConflictContext(inGame);
+      f_92087_.setKeyConflictContext(inGame);
+      f_92088_.setKeyConflictContext(inGame);
+      f_92089_.setKeyConflictContext(inGame);
+      f_92090_.setKeyConflictContext(inGame);
+      f_92091_.setKeyConflictContext(inGame);
+      f_92096_.setKeyConflictContext(inGame);
+      f_92098_.setKeyConflictContext(inGame);
+      f_92099_.setKeyConflictContext(inGame);
+      f_92100_.setKeyConflictContext(inGame);
+      f_92103_.setKeyConflictContext(inGame);
+      f_92104_.setKeyConflictContext(inGame);
    }
 
    public CameraType m_92176_() {

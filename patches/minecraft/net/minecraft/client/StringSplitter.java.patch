--- a/net/minecraft/client/StringSplitter.java
+++ b/net/minecraft/client/StringSplitter.java
@@ -31,8 +_,8 @@
          return 0.0F;
       } else {
          MutableFloat mutablefloat = new MutableFloat();
-         StringDecomposer.m_14346_(p_92354_, Style.f_131099_, (p_92429_, p_92430_, p_92431_) -> {
-            mutablefloat.add(this.f_92333_.m_92515_(p_92431_, p_92430_));
+         StringDecomposer.m_14346_(p_92354_, Style.f_131099_, (p_238363_2_, p_238363_3_, p_238363_4_) -> {
+            mutablefloat.add(this.f_92333_.m_92515_(p_238363_4_, p_238363_3_));
             return true;
          });
          return mutablefloat.floatValue();
@@ -41,8 +_,8 @@
 
    public float m_92384_(FormattedText p_92385_) {
       MutableFloat mutablefloat = new MutableFloat();
-      StringDecomposer.m_14328_(p_92385_, Style.f_131099_, (p_92420_, p_92421_, p_92422_) -> {
-         mutablefloat.add(this.f_92333_.m_92515_(p_92422_, p_92421_));
+      StringDecomposer.m_14328_(p_92385_, Style.f_131099_, (p_238359_2_, p_238359_3_, p_238359_4_) -> {
+         mutablefloat.add(this.f_92333_.m_92515_(p_238359_4_, p_238359_3_));
          return true;
       });
       return mutablefloat.floatValue();
@@ -50,8 +_,8 @@
 
    public float m_92336_(FormattedCharSequence p_92337_) {
       MutableFloat mutablefloat = new MutableFloat();
-      p_92337_.m_13731_((p_92400_, p_92401_, p_92402_) -> {
-         mutablefloat.add(this.f_92333_.m_92515_(p_92402_, p_92401_));
+      p_92337_.m_13731_((p_243243_2_, p_243243_3_, p_243243_4_) -> {
+         mutablefloat.add(this.f_92333_.m_92515_(p_243243_4_, p_243243_3_));
          return true;
       });
       return mutablefloat.floatValue();
@@ -70,12 +_,12 @@
    public String m_92423_(String p_92424_, int p_92425_, Style p_92426_) {
       MutableFloat mutablefloat = new MutableFloat();
       MutableInt mutableint = new MutableInt(p_92424_.length());
-      StringDecomposer.m_14337_(p_92424_, p_92426_, (p_92407_, p_92408_, p_92409_) -> {
-         float f = mutablefloat.addAndGet(this.f_92333_.m_92515_(p_92409_, p_92408_));
+      StringDecomposer.m_14337_(p_92424_, p_92426_, (p_238360_4_, p_238360_5_, p_238360_6_) -> {
+         float f = mutablefloat.addAndGet(this.f_92333_.m_92515_(p_238360_6_, p_238360_5_));
          if (f > (float)p_92425_) {
             return false;
          } else {
-            mutableint.setValue(p_92407_);
+            mutableint.setValue(p_238360_4_);
             return true;
          }
       });
@@ -85,8 +_,8 @@
    @Nullable
    public Style m_92386_(FormattedText p_92387_, int p_92388_) {
       StringSplitter.WidthLimitedCharSink stringsplitter$widthlimitedcharsink = new StringSplitter.WidthLimitedCharSink((float)p_92388_);
-      return p_92387_.<Style>m_7451_((p_92343_, p_92344_) -> {
-         return StringDecomposer.m_14346_(p_92344_, p_92343_, stringsplitter$widthlimitedcharsink) ? Optional.empty() : Optional.of(p_92343_);
+      return p_92387_.m_7451_((p_238348_1_, p_238348_2_) -> {
+         return StringDecomposer.m_14346_(p_238348_2_, p_238348_1_, stringsplitter$widthlimitedcharsink) ? Optional.empty() : Optional.of(p_238348_1_);
       }, Style.f_131099_).orElse((Style)null);
    }
 
@@ -94,9 +_,9 @@
    public Style m_92338_(FormattedCharSequence p_92339_, int p_92340_) {
       StringSplitter.WidthLimitedCharSink stringsplitter$widthlimitedcharsink = new StringSplitter.WidthLimitedCharSink((float)p_92340_);
       MutableObject<Style> mutableobject = new MutableObject<>();
-      p_92339_.m_13731_((p_92348_, p_92349_, p_92350_) -> {
-         if (!stringsplitter$widthlimitedcharsink.m_6411_(p_92348_, p_92349_, p_92350_)) {
-            mutableobject.setValue(p_92349_);
+      p_92339_.m_13731_((p_243240_2_, p_243240_3_, p_243240_4_) -> {
+         if (!stringsplitter$widthlimitedcharsink.m_6411_(p_243240_2_, p_243240_3_, p_243240_4_)) {
+            mutableobject.setValue(p_243240_3_);
             return false;
          } else {
             return true;
@@ -195,25 +_,25 @@
 
    public List<FormattedText> m_92432_(String p_92433_, int p_92434_, Style p_92435_) {
       List<FormattedText> list = Lists.newArrayList();
-      this.m_92364_(p_92433_, p_92434_, p_92435_, false, (p_92373_, p_92374_, p_92375_) -> {
-         list.add(FormattedText.m_130762_(p_92433_.substring(p_92374_, p_92375_), p_92373_));
+      this.m_92364_(p_92433_, p_92434_, p_92435_, false, (p_238354_2_, p_238354_3_, p_238354_4_) -> {
+         list.add(FormattedText.m_130762_(p_92433_.substring(p_238354_3_, p_238354_4_), p_238354_2_));
       });
       return list;
    }
 
    public List<FormattedText> m_92414_(FormattedText p_92415_, int p_92416_, Style p_92417_) {
       List<FormattedText> list = Lists.newArrayList();
-      this.m_92393_(p_92415_, p_92416_, p_92417_, (p_92378_, p_92379_) -> {
-         list.add(p_92378_);
+      this.m_92393_(p_92415_, p_92416_, p_92417_, (p_243241_1_, p_243241_2_) -> {
+         list.add(p_243241_1_);
       });
       return list;
    }
 
    public void m_92393_(FormattedText p_92394_, int p_92395_, Style p_92396_, BiConsumer<FormattedText, Boolean> p_92397_) {
       List<StringSplitter.LineComponent> list = Lists.newArrayList();
-      p_92394_.m_7451_((p_92382_, p_92383_) -> {
-         if (!p_92383_.isEmpty()) {
-            list.add(new StringSplitter.LineComponent(p_92383_, p_92382_));
+      p_92394_.m_7451_((p_238355_1_, p_238355_2_) -> {
+         if (!p_238355_2_.isEmpty()) {
+            list.add(new StringSplitter.LineComponent(p_238355_2_, p_238355_1_));
          }
 
          return Optional.empty();
@@ -256,75 +_,16 @@
 
    }
 
-   @OnlyIn(Dist.CLIENT)
-   static class FlatComponents {
-      private final List<StringSplitter.LineComponent> f_92445_;
-      private String f_92446_;
-
-      public FlatComponents(List<StringSplitter.LineComponent> p_92448_) {
-         this.f_92445_ = p_92448_;
-         this.f_92446_ = p_92448_.stream().map((p_92459_) -> {
-            return p_92459_.f_92485_;
-         }).collect(Collectors.joining());
-      }
-
-      public char m_92450_(int p_92451_) {
-         return this.f_92446_.charAt(p_92451_);
-      }
-
-      public FormattedText m_92452_(int p_92453_, int p_92454_, Style p_92455_) {
-         ComponentCollector componentcollector = new ComponentCollector();
-         ListIterator<StringSplitter.LineComponent> listiterator = this.f_92445_.listIterator();
-         int i = p_92453_;
-         boolean flag = false;
-
-         while(listiterator.hasNext()) {
-            StringSplitter.LineComponent stringsplitter$linecomponent = listiterator.next();
-            String s = stringsplitter$linecomponent.f_92485_;
-            int j = s.length();
-            if (!flag) {
-               if (i > j) {
-                  componentcollector.m_90675_(stringsplitter$linecomponent);
-                  listiterator.remove();
-                  i -= j;
-               } else {
-                  String s1 = s.substring(0, i);
-                  if (!s1.isEmpty()) {
-                     componentcollector.m_90675_(FormattedText.m_130762_(s1, stringsplitter$linecomponent.f_92486_));
-                  }
-
-                  i += p_92454_;
-                  flag = true;
-               }
-            }
-
-            if (flag) {
-               if (i <= j) {
-                  String s2 = s.substring(i);
-                  if (s2.isEmpty()) {
-                     listiterator.remove();
-                  } else {
-                     listiterator.set(new StringSplitter.LineComponent(s2, p_92455_));
-                  }
-                  break;
-               }
-
-               listiterator.remove();
-               i -= j;
-            }
-         }
-
-         this.f_92446_ = this.f_92446_.substring(p_92453_ + p_92454_);
-         return componentcollector.m_90677_();
-      }
-
-      @Nullable
-      public FormattedText m_92449_() {
-         ComponentCollector componentcollector = new ComponentCollector();
-         this.f_92445_.forEach(componentcollector::m_90675_);
-         this.f_92445_.clear();
-         return componentcollector.m_90674_();
-      }
+   @FunctionalInterface
+   @OnlyIn(Dist.CLIENT)
+   public interface WidthProvider {
+      float m_92515_(int p_92516_, Style p_92517_);
+   }
+
+   @FunctionalInterface
+   @OnlyIn(Dist.CLIENT)
+   public interface LinePosConsumer {
+      void m_92499_(Style p_92500_, int p_92501_, int p_92502_);
    }
 
    @OnlyIn(Dist.CLIENT)
@@ -388,31 +_,6 @@
    }
 
    @OnlyIn(Dist.CLIENT)
-   static class LineComponent implements FormattedText {
-      private final String f_92485_;
-      private final Style f_92486_;
-
-      public LineComponent(String p_92488_, Style p_92489_) {
-         this.f_92485_ = p_92488_;
-         this.f_92486_ = p_92489_;
-      }
-
-      public <T> Optional<T> m_5651_(FormattedText.ContentConsumer<T> p_92493_) {
-         return p_92493_.m_130809_(this.f_92485_);
-      }
-
-      public <T> Optional<T> m_7451_(FormattedText.StyledContentConsumer<T> p_92495_, Style p_92496_) {
-         return p_92495_.m_7164_(this.f_92486_.m_131146_(p_92496_), this.f_92485_);
-      }
-   }
-
-   @FunctionalInterface
-   @OnlyIn(Dist.CLIENT)
-   public interface LinePosConsumer {
-      void m_92499_(Style p_92500_, int p_92501_, int p_92502_);
-   }
-
-   @OnlyIn(Dist.CLIENT)
    class WidthLimitedCharSink implements FormattedCharSink {
       private float f_92504_;
       private int f_92505_;
@@ -440,9 +_,93 @@
       }
    }
 
-   @FunctionalInterface
-   @OnlyIn(Dist.CLIENT)
-   public interface WidthProvider {
-      float m_92515_(int p_92516_, Style p_92517_);
+   @OnlyIn(Dist.CLIENT)
+   static class LineComponent implements FormattedText {
+      private final String f_92485_;
+      private final Style f_92486_;
+
+      public LineComponent(String p_92488_, Style p_92489_) {
+         this.f_92485_ = p_92488_;
+         this.f_92486_ = p_92489_;
+      }
+
+      public <T> Optional<T> m_5651_(FormattedText.ContentConsumer<T> p_92493_) {
+         return p_92493_.m_130809_(this.f_92485_);
+      }
+
+      public <T> Optional<T> m_7451_(FormattedText.StyledContentConsumer<T> p_92495_, Style p_92496_) {
+         return p_92495_.m_7164_(this.f_92486_.m_131146_(p_92496_), this.f_92485_);
+      }
+   }
+
+   @OnlyIn(Dist.CLIENT)
+   static class FlatComponents {
+      private final List<StringSplitter.LineComponent> f_92445_;
+      private String f_92446_;
+
+      public FlatComponents(List<StringSplitter.LineComponent> p_92448_) {
+         this.f_92445_ = p_92448_;
+         this.f_92446_ = p_92448_.stream().map((p_238375_0_) -> {
+            return p_238375_0_.f_92485_;
+         }).collect(Collectors.joining());
+      }
+
+      public char m_92450_(int p_92451_) {
+         return this.f_92446_.charAt(p_92451_);
+      }
+
+      public FormattedText m_92452_(int p_92453_, int p_92454_, Style p_92455_) {
+         ComponentCollector componentcollector = new ComponentCollector();
+         ListIterator<StringSplitter.LineComponent> listiterator = this.f_92445_.listIterator();
+         int i = p_92453_;
+         boolean flag = false;
+
+         while(listiterator.hasNext()) {
+            StringSplitter.LineComponent stringsplitter$linecomponent = listiterator.next();
+            String s = stringsplitter$linecomponent.f_92485_;
+            int j = s.length();
+            if (!flag) {
+               if (i > j) {
+                  componentcollector.m_90675_(stringsplitter$linecomponent);
+                  listiterator.remove();
+                  i -= j;
+               } else {
+                  String s1 = s.substring(0, i);
+                  if (!s1.isEmpty()) {
+                     componentcollector.m_90675_(FormattedText.m_130762_(s1, stringsplitter$linecomponent.f_92486_));
+                  }
+
+                  i += p_92454_;
+                  flag = true;
+               }
+            }
+
+            if (flag) {
+               if (i <= j) {
+                  String s2 = s.substring(i);
+                  if (s2.isEmpty()) {
+                     listiterator.remove();
+                  } else {
+                     listiterator.set(new StringSplitter.LineComponent(s2, p_92455_));
+                  }
+                  break;
+               }
+
+               listiterator.remove();
+               i -= j;
+            }
+         }
+
+         this.f_92446_ = this.f_92446_.substring(p_92453_ + p_92454_);
+         return componentcollector.m_90677_();
+      }
+
+      @Nullable
+      public FormattedText m_92449_() {
+         ComponentCollector componentcollector = new ComponentCollector();
+         this.f_92445_.forEach(componentcollector::m_90675_);
+         this.f_92445_.clear();
+         return componentcollector.m_90674_();
+      }
    }
 }

--- a/net/minecraft/world/scores/Scoreboard.java
+++ b/net/minecraft/world/scores/Scoreboard.java
@@ -48,7 +_,7 @@
          throw new IllegalArgumentException("An objective with the name '" + p_83437_ + "' already exists!");
       } else {
          Objective objective = new Objective(this, p_83437_, p_83438_, p_83439_, p_83440_);
-         this.f_83409_.computeIfAbsent(p_83438_, (p_83426_) -> {
+         this.f_83409_.computeIfAbsent(p_83438_, (p_197903_0_) -> {
             return Lists.newArrayList();
          }).add(objective);
          this.f_83408_.put(p_83437_, objective);
@@ -58,8 +_,8 @@
    }
 
    public final void m_83427_(ObjectiveCriteria p_83428_, String p_83429_, Consumer<Score> p_83430_) {
-      this.f_83409_.getOrDefault(p_83428_, Collections.emptyList()).forEach((p_83444_) -> {
-         p_83430_.accept(this.m_83471_(p_83429_, p_83444_));
+      this.f_83409_.getOrDefault(p_83428_, Collections.emptyList()).forEach((p_197906_3_) -> {
+         p_83430_.accept(this.m_83471_(p_83429_, p_197906_3_));
       });
    }
 
@@ -77,11 +_,11 @@
       if (p_83472_.length() > 40) {
          throw new IllegalArgumentException("The player name '" + p_83472_ + "' is too long!");
       } else {
-         Map<Objective, Score> map = this.f_83410_.computeIfAbsent(p_83472_, (p_83507_) -> {
+         Map<Objective, Score> map = this.f_83410_.computeIfAbsent(p_83472_, (p_197898_0_) -> {
             return Maps.newHashMap();
          });
-         return map.computeIfAbsent(p_83473_, (p_83487_) -> {
-            Score score = new Score(this, p_83487_, p_83472_);
+         return map.computeIfAbsent(p_83473_, (p_197904_2_) -> {
+            Score score = new Score(this, p_197904_2_, p_83472_);
             score.m_83402_(0);
             return score;
          });
@@ -340,15 +_,15 @@
 
    protected ListTag m_83497_() {
       ListTag listtag = new ListTag();
-      this.f_83410_.values().stream().map(Map::values).forEach((p_83452_) -> {
-         p_83452_.stream().filter((p_83458_) -> {
-            return p_83458_.m_83404_() != null;
-         }).forEach((p_83449_) -> {
+      this.f_83410_.values().stream().map(Map::values).forEach((p_197894_1_) -> {
+         p_197894_1_.stream().filter((p_209546_0_) -> {
+            return p_209546_0_.m_83404_() != null;
+         }).forEach((p_197896_1_) -> {
             CompoundTag compoundtag = new CompoundTag();
-            compoundtag.m_128359_("Name", p_83449_.m_83405_());
-            compoundtag.m_128359_("Objective", p_83449_.m_83404_().m_83320_());
-            compoundtag.m_128405_("Score", p_83449_.m_83400_());
-            compoundtag.m_128379_("Locked", p_83449_.m_83407_());
+            compoundtag.m_128359_("Name", p_197896_1_.m_83405_());
+            compoundtag.m_128359_("Objective", p_197896_1_.m_83404_().m_83320_());
+            compoundtag.m_128405_("Score", p_197896_1_.m_83400_());
+            compoundtag.m_128379_("Locked", p_197896_1_.m_83407_());
             listtag.add(compoundtag);
          });
       });

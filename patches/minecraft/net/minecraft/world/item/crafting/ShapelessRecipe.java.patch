--- a/net/minecraft/world/item/crafting/ShapelessRecipe.java
+++ b/net/minecraft/world/item/crafting/ShapelessRecipe.java
@@ -12,20 +_,20 @@
 import net.minecraft.world.inventory.CraftingContainer;
 import net.minecraft.world.item.ItemStack;
 import net.minecraft.world.level.Level;
-import net.minecraftforge.api.distmarker.Dist;
-import net.minecraftforge.api.distmarker.OnlyIn;
 
 public class ShapelessRecipe implements CraftingRecipe {
    private final ResourceLocation f_44241_;
    private final String f_44242_;
    private final ItemStack f_44243_;
    private final NonNullList<Ingredient> f_44244_;
+   private final boolean isSimple;
 
    public ShapelessRecipe(ResourceLocation p_44246_, String p_44247_, ItemStack p_44248_, NonNullList<Ingredient> p_44249_) {
       this.f_44241_ = p_44246_;
       this.f_44242_ = p_44247_;
       this.f_44243_ = p_44248_;
       this.f_44244_ = p_44249_;
+      this.isSimple = p_44249_.stream().allMatch(Ingredient::isSimple);
    }
 
    public ResourceLocation m_6423_() {
@@ -36,7 +_,6 @@
       return RecipeSerializer.f_44077_;
    }
 
-   @OnlyIn(Dist.CLIENT)
    public String m_6076_() {
       return this.f_44242_;
    }
@@ -51,36 +_,39 @@
 
    public boolean m_5818_(CraftingContainer p_44262_, Level p_44263_) {
       StackedContents stackedcontents = new StackedContents();
+      java.util.List<ItemStack> inputs = new java.util.ArrayList<>();
       int i = 0;
 
       for(int j = 0; j < p_44262_.m_6643_(); ++j) {
          ItemStack itemstack = p_44262_.m_8020_(j);
          if (!itemstack.m_41619_()) {
             ++i;
+            if (isSimple)
             stackedcontents.m_36468_(itemstack, 1);
+            else inputs.add(itemstack);
          }
       }
 
-      return i == this.f_44244_.size() && stackedcontents.m_36475_(this, (IntList)null);
+      return i == this.f_44244_.size() && (isSimple ? stackedcontents.m_36475_(this, (IntList)null) : net.minecraftforge.common.util.RecipeMatcher.findMatches(inputs,  this.f_44244_) != null);
    }
 
    public ItemStack m_5874_(CraftingContainer p_44260_) {
       return this.f_44243_.m_41777_();
    }
 
-   @OnlyIn(Dist.CLIENT)
    public boolean m_8004_(int p_44252_, int p_44253_) {
       return p_44252_ * p_44253_ >= this.f_44244_.size();
    }
 
-   public static class Serializer implements RecipeSerializer<ShapelessRecipe> {
+   public static class Serializer extends net.minecraftforge.registries.ForgeRegistryEntry<RecipeSerializer<?>> implements RecipeSerializer<ShapelessRecipe> {
+      private static final ResourceLocation NAME = new ResourceLocation("minecraft", "crafting_shapeless");
       public ShapelessRecipe m_6729_(ResourceLocation p_44290_, JsonObject p_44291_) {
          String s = GsonHelper.m_13851_(p_44291_, "group", "");
          NonNullList<Ingredient> nonnulllist = m_44275_(GsonHelper.m_13933_(p_44291_, "ingredients"));
          if (nonnulllist.isEmpty()) {
             throw new JsonParseException("No ingredients for shapeless recipe");
-         } else if (nonnulllist.size() > 9) {
-            throw new JsonParseException("Too many ingredients for shapeless recipe");
+         } else if (nonnulllist.size() > ShapedRecipe.MAX_WIDTH * ShapedRecipe.MAX_HEIGHT) {
+            throw new JsonParseException("Too many ingredients for shapeless recipe the max is " + (ShapedRecipe.MAX_WIDTH * ShapedRecipe.MAX_HEIGHT));
          } else {
             ItemStack itemstack = ShapedRecipe.m_44182_(GsonHelper.m_13930_(p_44291_, "result"));
             return new ShapelessRecipe(p_44290_, s, itemstack, nonnulllist);

--- a/net/minecraft/world/entity/ai/village/poi/PoiType.java
+++ b/net/minecraft/world/entity/ai/village/poi/PoiType.java
@@ -3,7 +_,6 @@
 import com.google.common.base.Suppliers;
 import com.google.common.collect.ImmutableList;
 import com.google.common.collect.ImmutableSet;
-import com.google.common.collect.Maps;
 import it.unimi.dsi.fastutil.objects.ObjectOpenHashSet;
 import java.util.Map;
 import java.util.Optional;
@@ -11,7 +_,6 @@
 import java.util.function.Predicate;
 import java.util.function.Supplier;
 import java.util.stream.Collectors;
-import net.minecraft.Util;
 import net.minecraft.core.Registry;
 import net.minecraft.resources.ResourceLocation;
 import net.minecraft.world.entity.npc.VillagerProfession;
@@ -21,22 +_,22 @@
 import net.minecraft.world.level.block.state.BlockState;
 import net.minecraft.world.level.block.state.properties.BedPart;
 
-public class PoiType {
+public class PoiType extends net.minecraftforge.registries.ForgeRegistryEntry<PoiType> {
    private static final Supplier<Set<PoiType>> f_27353_ = Suppliers.memoize(() -> {
       return Registry.f_122869_.m_123024_().map(VillagerProfession::m_35622_).collect(Collectors.toSet());
    });
-   public static final Predicate<PoiType> f_27329_ = (p_27399_) -> {
-      return f_27353_.get().contains(p_27399_);
+   public static final Predicate<PoiType> f_27329_ = (p_221049_0_) -> {
+      return f_27353_.get().contains(p_221049_0_);
    };
-   public static final Predicate<PoiType> f_27330_ = (p_27394_) -> {
+   public static final Predicate<PoiType> f_27330_ = (p_234172_0_) -> {
       return true;
    };
-   private static final Set<BlockState> f_27354_ = ImmutableList.of(Blocks.f_50028_, Blocks.f_50029_, Blocks.f_50025_, Blocks.f_50026_, Blocks.f_50023_, Blocks.f_50021_, Blocks.f_50027_, Blocks.f_50017_, Blocks.f_50022_, Blocks.f_50019_, Blocks.f_50068_, Blocks.f_50067_, Blocks.f_50020_, Blocks.f_50024_, Blocks.f_50066_, Blocks.f_50018_).stream().flatMap((p_27389_) -> {
-      return p_27389_.m_49965_().m_61056_().stream();
-   }).filter((p_27396_) -> {
-      return p_27396_.m_61143_(BedBlock.f_49440_) == BedPart.HEAD;
+   private static final Set<BlockState> f_27354_ = ImmutableList.of(Blocks.f_50028_, Blocks.f_50029_, Blocks.f_50025_, Blocks.f_50026_, Blocks.f_50023_, Blocks.f_50021_, Blocks.f_50027_, Blocks.f_50017_, Blocks.f_50022_, Blocks.f_50019_, Blocks.f_50068_, Blocks.f_50067_, Blocks.f_50020_, Blocks.f_50024_, Blocks.f_50066_, Blocks.f_50018_).stream().flatMap((p_234171_0_) -> {
+      return p_234171_0_.m_49965_().m_61056_().stream();
+   }).filter((p_234173_0_) -> {
+      return p_234173_0_.m_61143_(BedBlock.f_49440_) == BedPart.HEAD;
    }).collect(ImmutableSet.toImmutableSet());
-   private static final Map<BlockState, PoiType> f_27323_ = Maps.newHashMap();
+   private static final Map<BlockState, PoiType> f_27323_ = net.minecraftforge.registries.GameData.getBlockStatePointOfInterestTypeMap();
    public static final PoiType f_27331_ = m_27379_("unemployed", ImmutableSet.of(), 1, f_27329_, 1);
    public static final PoiType f_27332_ = m_27374_("armorer", m_27372_(Blocks.f_50620_), 1, 1);
    public static final PoiType f_27333_ = m_27374_("butcher", m_27372_(Blocks.f_50619_), 1, 1);
@@ -81,8 +_,8 @@
       this.f_27324_ = p_27357_;
       this.f_27325_ = ImmutableSet.copyOf(p_27358_);
       this.f_27326_ = p_27359_;
-      this.f_27327_ = (p_27387_) -> {
-         return p_27387_ == this;
+      this.f_27327_ = (p_234170_1_) -> {
+         return p_234170_1_ == this;
       };
       this.f_27328_ = p_27360_;
    }
@@ -112,16 +_,14 @@
    }
 
    private static PoiType m_27367_(PoiType p_27368_) {
-      p_27368_.f_27325_.forEach((p_27371_) -> {
-         PoiType poitype = f_27323_.put(p_27371_, p_27368_);
-         if (poitype != null) {
-            throw (IllegalStateException)Util.m_137570_(new IllegalStateException(String.format("%s is defined in too many tags", p_27371_)));
-         }
-      });
       return p_27368_;
    }
 
    public static Optional<PoiType> m_27390_(BlockState p_27391_) {
       return Optional.ofNullable(f_27323_.get(p_27391_));
+   }
+   
+   public ImmutableSet<BlockState> getBlockStates() {
+      return ImmutableSet.copyOf(this.f_27325_);
    }
 }

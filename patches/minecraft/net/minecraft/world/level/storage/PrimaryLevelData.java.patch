--- a/net/minecraft/world/level/storage/PrimaryLevelData.java
+++ b/net/minecraft/world/level/storage/PrimaryLevelData.java
@@ -117,8 +_,8 @@
       CompoundTag compoundtag = (CompoundTag)p_78531_.get("DragonFight").result().map(Dynamic::getValue).orElseGet(() -> {
          return p_78531_.get("DimensionData").get("1").get("DragonFight").orElseEmptyMap().getValue();
       });
-      return new PrimaryLevelData(p_78532_, p_78533_, p_78534_, p_78531_.get("WasModded").asBoolean(false), p_78531_.get("SpawnX").asInt(0), p_78531_.get("SpawnY").asInt(0), p_78531_.get("SpawnZ").asInt(0), p_78531_.get("SpawnAngle").asFloat(0.0F), i, p_78531_.get("DayTime").asLong(i), p_78536_.m_78389_(), p_78531_.get("clearWeatherTime").asInt(0), p_78531_.get("rainTime").asInt(0), p_78531_.get("raining").asBoolean(false), p_78531_.get("thunderTime").asInt(0), p_78531_.get("thundering").asBoolean(false), p_78531_.get("initialized").asBoolean(true), p_78531_.get("DifficultyLocked").asBoolean(false), WorldBorder.Settings.m_62037_(p_78531_, WorldBorder.f_61907_), p_78531_.get("WanderingTraderSpawnDelay").asInt(0), p_78531_.get("WanderingTraderSpawnChance").asInt(0), p_78531_.get("WanderingTraderId").read(SerializableUUID.f_123272_).result().orElse((UUID)null), p_78531_.get("ServerBrands").asStream().flatMap((p_78529_) -> {
-         return Util.m_137519_(p_78529_.asString().result());
+      return new PrimaryLevelData(p_78532_, p_78533_, p_78534_, p_78531_.get("WasModded").asBoolean(false), p_78531_.get("SpawnX").asInt(0), p_78531_.get("SpawnY").asInt(0), p_78531_.get("SpawnZ").asInt(0), p_78531_.get("SpawnAngle").asFloat(0.0F), i, p_78531_.get("DayTime").asLong(i), p_78536_.m_78389_(), p_78531_.get("clearWeatherTime").asInt(0), p_78531_.get("rainTime").asInt(0), p_78531_.get("raining").asBoolean(false), p_78531_.get("thunderTime").asInt(0), p_78531_.get("thundering").asBoolean(false), p_78531_.get("initialized").asBoolean(true), p_78531_.get("DifficultyLocked").asBoolean(false), WorldBorder.Settings.m_62037_(p_78531_, WorldBorder.f_61907_), p_78531_.get("WanderingTraderSpawnDelay").asInt(0), p_78531_.get("WanderingTraderSpawnChance").asInt(0), p_78531_.get("WanderingTraderId").read(SerializableUUID.f_123272_).result().orElse((UUID)null), p_78531_.get("ServerBrands").asStream().flatMap((p_237368_0_) -> {
+         return Util.m_137519_(p_237368_0_.asString().result());
       }).collect(Collectors.toCollection(Sets::newLinkedHashSet)), new TimerQueue<>(TimerCallbacks.f_82226_, p_78531_.get("ScheduledEvents").asStream()), (CompoundTag)p_78531_.get("CustomBossEvents").orElseEmptyMap().getValue(), compoundtag, p_78535_, p_78537_, p_78538_);
    }
 
@@ -145,8 +_,8 @@
       p_78547_.m_128365_("Version", compoundtag);
       p_78547_.m_128405_("DataVersion", SharedConstants.m_136187_().getWorldVersion());
       RegistryWriteOps<Tag> registrywriteops = RegistryWriteOps.m_135767_(NbtOps.f_128958_, p_78546_);
-      WorldGenSettings.f_64600_.encodeStart(registrywriteops, this.f_78444_).resultOrPartial(Util.m_137489_("WorldGenSettings: ", f_78442_::error)).ifPresent((p_78574_) -> {
-         p_78547_.m_128365_("WorldGenSettings", p_78574_);
+      WorldGenSettings.f_64600_.encodeStart(registrywriteops, this.f_78444_).resultOrPartial(Util.m_137489_("WorldGenSettings: ", f_78442_::error)).ifPresent((p_237373_1_) -> {
+         p_78547_.m_128365_("WorldGenSettings", p_237373_1_);
       });
       p_78547_.m_128405_("GameType", this.f_78443_.m_46929_().m_46392_());
       p_78547_.m_128405_("SpawnX", this.f_78446_);
@@ -175,8 +_,8 @@
          p_78547_.m_128365_("Player", p_78548_);
       }
 
-      DataPackConfig.f_45843_.encodeStart(NbtOps.f_128958_, this.f_78443_.m_46934_()).result().ifPresent((p_78560_) -> {
-         p_78547_.m_128365_("DataPacks", p_78560_);
+      DataPackConfig.f_45843_.encodeStart(NbtOps.f_128958_, this.f_78443_.m_46934_()).result().ifPresent((p_237371_1_) -> {
+         p_78547_.m_128365_("DataPacks", p_237371_1_);
       });
       if (this.f_78466_ != null) {
          p_78547_.m_128365_("CustomBossEvents", this.f_78466_);

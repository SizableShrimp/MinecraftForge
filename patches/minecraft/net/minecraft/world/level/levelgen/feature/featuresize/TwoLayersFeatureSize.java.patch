--- a/net/minecraft/world/level/levelgen/feature/featuresize/TwoLayersFeatureSize.java
+++ b/net/minecraft/world/level/levelgen/feature/featuresize/TwoLayersFeatureSize.java
@@ -5,14 +_,14 @@
 import java.util.OptionalInt;
 
 public class TwoLayersFeatureSize extends FeatureSize {
-   public static final Codec<TwoLayersFeatureSize> f_68336_ = RecordCodecBuilder.create((p_68356_) -> {
-      return p_68356_.group(Codec.intRange(0, 81).fieldOf("limit").orElse(1).forGetter((p_68361_) -> {
-         return p_68361_.f_68337_;
-      }), Codec.intRange(0, 16).fieldOf("lower_size").orElse(0).forGetter((p_68359_) -> {
-         return p_68359_.f_68338_;
-      }), Codec.intRange(0, 16).fieldOf("upper_size").orElse(1).forGetter((p_68354_) -> {
-         return p_68354_.f_68339_;
-      }), m_68286_()).apply(p_68356_, TwoLayersFeatureSize::new);
+   public static final Codec<TwoLayersFeatureSize> f_68336_ = RecordCodecBuilder.create((p_236732_0_) -> {
+      return p_236732_0_.group(Codec.intRange(0, 81).fieldOf("limit").orElse(1).forGetter((p_236735_0_) -> {
+         return p_236735_0_.f_68337_;
+      }), Codec.intRange(0, 16).fieldOf("lower_size").orElse(0).forGetter((p_236734_0_) -> {
+         return p_236734_0_.f_68338_;
+      }), Codec.intRange(0, 16).fieldOf("upper_size").orElse(1).forGetter((p_236733_0_) -> {
+         return p_236733_0_.f_68339_;
+      }), m_68286_()).apply(p_236732_0_, TwoLayersFeatureSize::new);
    });
    private final int f_68337_;
    private final int f_68338_;

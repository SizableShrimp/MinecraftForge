--- a/net/minecraft/world/level/levelgen/feature/configurations/OreConfiguration.java
+++ b/net/minecraft/world/level/levelgen/feature/configurations/OreConfiguration.java
@@ -10,14 +_,14 @@
 import net.minecraft.world.level.levelgen.structure.templatesystem.TagMatchTest;
 
 public class OreConfiguration implements FeatureConfiguration {
-   public static final Codec<OreConfiguration> f_67837_ = RecordCodecBuilder.create((p_67849_) -> {
-      return p_67849_.group(RuleTest.f_74307_.fieldOf("target").forGetter((p_67853_) -> {
-         return p_67853_.f_67838_;
-      }), BlockState.f_61039_.fieldOf("state").forGetter((p_67851_) -> {
-         return p_67851_.f_67840_;
-      }), Codec.intRange(0, 64).fieldOf("size").forGetter((p_67847_) -> {
-         return p_67847_.f_67839_;
-      })).apply(p_67849_, OreConfiguration::new);
+   public static final Codec<OreConfiguration> f_67837_ = RecordCodecBuilder.create((p_236568_0_) -> {
+      return p_236568_0_.group(RuleTest.f_74307_.fieldOf("target").forGetter((p_236570_0_) -> {
+         return p_236570_0_.f_67838_;
+      }), BlockState.f_61039_.fieldOf("state").forGetter((p_236569_0_) -> {
+         return p_236569_0_.f_67840_;
+      }), Codec.intRange(0, 64).fieldOf("size").forGetter((p_236567_0_) -> {
+         return p_236567_0_.f_67839_;
+      })).apply(p_236568_0_, OreConfiguration::new);
    });
    public final RuleTest f_67838_;
    public final int f_67839_;

--- a/net/minecraft/world/level/levelgen/feature/treedecorators/BeehiveDecorator.java
+++ b/net/minecraft/world/level/levelgen/feature/treedecorators/BeehiveDecorator.java
@@ -19,8 +_,8 @@
 import net.minecraft.world.level.levelgen.structure.BoundingBox;
 
 public class BeehiveDecorator extends TreeDecorator {
-   public static final Codec<BeehiveDecorator> f_69954_ = Codec.floatRange(0.0F, 1.0F).fieldOf("probability").xmap(BeehiveDecorator::new, (p_69971_) -> {
-      return p_69971_.f_69955_;
+   public static final Codec<BeehiveDecorator> f_69954_ = Codec.floatRange(0.0F, 1.0F).fieldOf("probability").xmap(BeehiveDecorator::new, (p_236865_0_) -> {
+      return p_236865_0_.f_69955_;
    }).codec();
    private final float f_69955_;
 
@@ -36,8 +_,8 @@
       if (!(p_69965_.nextFloat() >= this.f_69955_)) {
          Direction direction = BeehiveBlock.m_49647_(p_69965_);
          int i = !p_69967_.isEmpty() ? Math.max(p_69967_.get(0).m_123342_() - 1, p_69966_.get(0).m_123342_()) : Math.min(p_69966_.get(0).m_123342_() + 1 + p_69965_.nextInt(3), p_69966_.get(p_69966_.size() - 1).m_123342_());
-         List<BlockPos> list = p_69966_.stream().filter((p_69962_) -> {
-            return p_69962_.m_123342_() == i;
+         List<BlockPos> list = p_69966_.stream().filter((p_236864_1_) -> {
+            return p_236864_1_.m_123342_() == i;
          }).collect(Collectors.toList());
          if (!list.isEmpty()) {
             BlockPos blockpos = list.get(p_69965_.nextInt(list.size()));

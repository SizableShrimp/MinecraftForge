--- a/net/minecraft/world/level/biome/Biome.java
+++ b/net/minecraft/world/level/biome/Biome.java
@@ -53,7 +_,7 @@
 import org.apache.logging.log4j.LogManager;
 import org.apache.logging.log4j.Logger;
 
-public final class Biome {
+public final class Biome extends net.minecraftforge.registries.ForgeRegistryEntry.UncheckedRegistryEntry<Biome> {
    public static final Logger f_47428_ = LogManager.getLogger();
    public static final Codec<Biome> f_47429_ = RecordCodecBuilder.create((p_47527_) -> {
       return p_47527_.group(Biome.ClimateSettings.f_47679_.forGetter((p_47559_) -> {
@@ -70,7 +_,9 @@
          return p_47544_.f_47438_;
       }), MobSpawnSettings.f_48327_.forGetter((p_47541_) -> {
          return p_47541_.f_47439_;
-      })).apply(p_47527_, Biome::new);
+      }), ResourceLocation.f_135803_.optionalFieldOf("forge:registry_name").forGetter(b -> Optional.ofNullable(b.getRegistryName())))
+      .apply(p_47527_, (climate, category, depth, scale, effects, gen, spawns, name) ->
+          net.minecraftforge.common.ForgeHooks.enhanceBiome(name.orElse(null), climate, category, depth, scale, effects, gen, spawns, p_47527_, Biome::new));
    });
    public static final Codec<Biome> f_47430_ = RecordCodecBuilder.create((p_47504_) -> {
       return p_47504_.group(Biome.ClimateSettings.f_47679_.forGetter((p_47538_) -> {
@@ -200,7 +_,7 @@
       } else {
          if (p_47521_.m_123342_() >= 0 && p_47521_.m_123342_() < 256 && p_47520_.m_45517_(LightLayer.BLOCK, p_47521_) < 10) {
             BlockState blockstate = p_47520_.m_8055_(p_47521_);
-            if (blockstate.m_60795_() && Blocks.f_50125_.m_49966_().m_60710_(p_47520_, p_47521_)) {
+            if (blockstate.isAir(p_47520_, p_47521_) && Blocks.f_50125_.m_49966_().m_60710_(p_47520_, p_47521_)) {
                return true;
             }
          }
@@ -365,6 +_,65 @@
       return resourcelocation == null ? super.toString() : resourcelocation.toString();
    }
 
+   public static class ClimateParameters {
+      public static final Codec<Biome.ClimateParameters> f_47649_ = RecordCodecBuilder.create((p_47665_) -> {
+         return p_47665_.group(Codec.floatRange(-2.0F, 2.0F).fieldOf("temperature").forGetter((p_47677_) -> {
+            return p_47677_.f_47650_;
+         }), Codec.floatRange(-2.0F, 2.0F).fieldOf("humidity").forGetter((p_47673_) -> {
+            return p_47673_.f_47651_;
+         }), Codec.floatRange(-2.0F, 2.0F).fieldOf("altitude").forGetter((p_47671_) -> {
+            return p_47671_.f_47652_;
+         }), Codec.floatRange(-2.0F, 2.0F).fieldOf("weirdness").forGetter((p_47669_) -> {
+            return p_47669_.f_47653_;
+         }), Codec.floatRange(0.0F, 1.0F).fieldOf("offset").forGetter((p_47667_) -> {
+            return p_47667_.f_47654_;
+         })).apply(p_47665_, Biome.ClimateParameters::new);
+      });
+      private final float f_47650_;
+      private final float f_47651_;
+      private final float f_47652_;
+      private final float f_47653_;
+      private final float f_47654_;
+
+      public ClimateParameters(float p_47657_, float p_47658_, float p_47659_, float p_47660_, float p_47661_) {
+         this.f_47650_ = p_47657_;
+         this.f_47651_ = p_47658_;
+         this.f_47652_ = p_47659_;
+         this.f_47653_ = p_47660_;
+         this.f_47654_ = p_47661_;
+      }
+
+      public boolean equals(Object p_47675_) {
+         if (this == p_47675_) {
+            return true;
+         } else if (p_47675_ != null && this.getClass() == p_47675_.getClass()) {
+            Biome.ClimateParameters biome$climateparameters = (Biome.ClimateParameters)p_47675_;
+            if (Float.compare(biome$climateparameters.f_47650_, this.f_47650_) != 0) {
+               return false;
+            } else if (Float.compare(biome$climateparameters.f_47651_, this.f_47651_) != 0) {
+               return false;
+            } else if (Float.compare(biome$climateparameters.f_47652_, this.f_47652_) != 0) {
+               return false;
+            } else {
+               return Float.compare(biome$climateparameters.f_47653_, this.f_47653_) == 0;
+            }
+         } else {
+            return false;
+         }
+      }
+
+      public int hashCode() {
+         int i = this.f_47650_ != 0.0F ? Float.floatToIntBits(this.f_47650_) : 0;
+         i = 31 * i + (this.f_47651_ != 0.0F ? Float.floatToIntBits(this.f_47651_) : 0);
+         i = 31 * i + (this.f_47652_ != 0.0F ? Float.floatToIntBits(this.f_47652_) : 0);
+         return 31 * i + (this.f_47653_ != 0.0F ? Float.floatToIntBits(this.f_47653_) : 0);
+      }
+
+      public float m_47662_(Biome.ClimateParameters p_47663_) {
+         return (this.f_47650_ - p_47663_.f_47650_) * (this.f_47650_ - p_47663_.f_47650_) + (this.f_47651_ - p_47663_.f_47651_) * (this.f_47651_ - p_47663_.f_47651_) + (this.f_47652_ - p_47663_.f_47652_) * (this.f_47652_ - p_47663_.f_47652_) + (this.f_47653_ - p_47663_.f_47653_) * (this.f_47653_ - p_47663_.f_47653_) + (this.f_47654_ - p_47663_.f_47654_) * (this.f_47654_ - p_47663_.f_47654_);
+      }
+   }
+
    public static class BiomeBuilder {
       @Nullable
       private Biome.Precipitation f_47581_;
@@ -469,8 +_,8 @@
       NETHER("nether");
 
       public static final Codec<Biome.BiomeCategory> f_47631_ = StringRepresentable.m_14350_(Biome.BiomeCategory::values, Biome.BiomeCategory::m_47643_);
-      private static final Map<String, Biome.BiomeCategory> f_47632_ = Arrays.stream(values()).collect(Collectors.toMap(Biome.BiomeCategory::m_47645_, (p_47642_) -> {
-         return p_47642_;
+      private static final Map<String, Biome.BiomeCategory> f_47632_ = Arrays.stream(values()).collect(Collectors.toMap(Biome.BiomeCategory::m_47645_, (p_222353_0_) -> {
+         return p_222353_0_;
       }));
       private final String f_47633_;
 
@@ -488,65 +_,6 @@
 
       public String m_7912_() {
          return this.f_47633_;
-      }
-   }
-
-   public static class ClimateParameters {
-      public static final Codec<Biome.ClimateParameters> f_47649_ = RecordCodecBuilder.create((p_47665_) -> {
-         return p_47665_.group(Codec.floatRange(-2.0F, 2.0F).fieldOf("temperature").forGetter((p_47677_) -> {
-            return p_47677_.f_47650_;
-         }), Codec.floatRange(-2.0F, 2.0F).fieldOf("humidity").forGetter((p_47673_) -> {
-            return p_47673_.f_47651_;
-         }), Codec.floatRange(-2.0F, 2.0F).fieldOf("altitude").forGetter((p_47671_) -> {
-            return p_47671_.f_47652_;
-         }), Codec.floatRange(-2.0F, 2.0F).fieldOf("weirdness").forGetter((p_47669_) -> {
-            return p_47669_.f_47653_;
-         }), Codec.floatRange(0.0F, 1.0F).fieldOf("offset").forGetter((p_47667_) -> {
-            return p_47667_.f_47654_;
-         })).apply(p_47665_, Biome.ClimateParameters::new);
-      });
-      private final float f_47650_;
-      private final float f_47651_;
-      private final float f_47652_;
-      private final float f_47653_;
-      private final float f_47654_;
-
-      public ClimateParameters(float p_47657_, float p_47658_, float p_47659_, float p_47660_, float p_47661_) {
-         this.f_47650_ = p_47657_;
-         this.f_47651_ = p_47658_;
-         this.f_47652_ = p_47659_;
-         this.f_47653_ = p_47660_;
-         this.f_47654_ = p_47661_;
-      }
-
-      public boolean equals(Object p_47675_) {
-         if (this == p_47675_) {
-            return true;
-         } else if (p_47675_ != null && this.getClass() == p_47675_.getClass()) {
-            Biome.ClimateParameters biome$climateparameters = (Biome.ClimateParameters)p_47675_;
-            if (Float.compare(biome$climateparameters.f_47650_, this.f_47650_) != 0) {
-               return false;
-            } else if (Float.compare(biome$climateparameters.f_47651_, this.f_47651_) != 0) {
-               return false;
-            } else if (Float.compare(biome$climateparameters.f_47652_, this.f_47652_) != 0) {
-               return false;
-            } else {
-               return Float.compare(biome$climateparameters.f_47653_, this.f_47653_) == 0;
-            }
-         } else {
-            return false;
-         }
-      }
-
-      public int hashCode() {
-         int i = this.f_47650_ != 0.0F ? Float.floatToIntBits(this.f_47650_) : 0;
-         i = 31 * i + (this.f_47651_ != 0.0F ? Float.floatToIntBits(this.f_47651_) : 0);
-         i = 31 * i + (this.f_47652_ != 0.0F ? Float.floatToIntBits(this.f_47652_) : 0);
-         return 31 * i + (this.f_47653_ != 0.0F ? Float.floatToIntBits(this.f_47653_) : 0);
-      }
-
-      public float m_47662_(Biome.ClimateParameters p_47663_) {
-         return (this.f_47650_ - p_47663_.f_47650_) * (this.f_47650_ - p_47663_.f_47650_) + (this.f_47651_ - p_47663_.f_47651_) * (this.f_47651_ - p_47663_.f_47651_) + (this.f_47652_ - p_47663_.f_47652_) * (this.f_47652_ - p_47663_.f_47652_) + (this.f_47653_ - p_47663_.f_47653_) * (this.f_47653_ - p_47663_.f_47653_) + (this.f_47654_ - p_47663_.f_47654_) * (this.f_47654_ - p_47663_.f_47654_);
       }
    }
 

--- a/net/minecraft/world/level/biome/OverworldBiomeSource.java
+++ b/net/minecraft/world/level/biome/OverworldBiomeSource.java
@@ -14,16 +_,16 @@
 import net.minecraftforge.api.distmarker.OnlyIn;
 
 public class OverworldBiomeSource extends BiomeSource {
-   public static final Codec<OverworldBiomeSource> f_48581_ = RecordCodecBuilder.create((p_48600_) -> {
-      return p_48600_.group(Codec.LONG.fieldOf("seed").stable().forGetter((p_48616_) -> {
-         return p_48616_.f_48584_;
-      }), Codec.BOOL.optionalFieldOf("legacy_biome_init_layer", Boolean.valueOf(false), Lifecycle.stable()).forGetter((p_48614_) -> {
-         return p_48614_.f_48585_;
-      }), Codec.BOOL.fieldOf("large_biomes").orElse(false).stable().forGetter((p_48609_) -> {
-         return p_48609_.f_48586_;
-      }), RegistryLookupCodec.m_135622_(Registry.f_122885_).forGetter((p_48598_) -> {
-         return p_48598_.f_48587_;
-      })).apply(p_48600_, p_48600_.stable(OverworldBiomeSource::new));
+   public static final Codec<OverworldBiomeSource> f_48581_ = RecordCodecBuilder.create((p_235302_0_) -> {
+      return p_235302_0_.group(Codec.LONG.fieldOf("seed").stable().forGetter((p_235304_0_) -> {
+         return p_235304_0_.f_48584_;
+      }), Codec.BOOL.optionalFieldOf("legacy_biome_init_layer", Boolean.valueOf(false), Lifecycle.stable()).forGetter((p_235303_0_) -> {
+         return p_235303_0_.f_48585_;
+      }), Codec.BOOL.fieldOf("large_biomes").orElse(false).stable().forGetter((p_235301_0_) -> {
+         return p_235301_0_.f_48586_;
+      }), RegistryLookupCodec.m_135622_(Registry.f_122885_).forGetter((p_242637_0_) -> {
+         return p_242637_0_.f_48587_;
+      })).apply(p_235302_0_, p_235302_0_.stable(OverworldBiomeSource::new));
    });
    private final Layer f_48582_;
    private static final List<ResourceKey<Biome>> f_48583_ = ImmutableList.of(Biomes.f_48174_, Biomes.f_48202_, Biomes.f_48203_, Biomes.f_48204_, Biomes.f_48205_, Biomes.f_48206_, Biomes.f_48207_, Biomes.f_48208_, Biomes.f_48211_, Biomes.f_48212_, Biomes.f_48213_, Biomes.f_48214_, Biomes.f_48215_, Biomes.f_48216_, Biomes.f_48217_, Biomes.f_48218_, Biomes.f_48219_, Biomes.f_48220_, Biomes.f_48221_, Biomes.f_48222_, Biomes.f_48223_, Biomes.f_48224_, Biomes.f_48225_, Biomes.f_48226_, Biomes.f_48148_, Biomes.f_48149_, Biomes.f_48150_, Biomes.f_48151_, Biomes.f_48152_, Biomes.f_48153_, Biomes.f_48154_, Biomes.f_48155_, Biomes.f_48156_, Biomes.f_48157_, Biomes.f_48158_, Biomes.f_48159_, Biomes.f_48160_, Biomes.f_48161_, Biomes.f_48166_, Biomes.f_48167_, Biomes.f_48168_, Biomes.f_48169_, Biomes.f_48170_, Biomes.f_48171_, Biomes.f_48172_, Biomes.f_48176_, Biomes.f_48177_, Biomes.f_48178_, Biomes.f_48179_, Biomes.f_48180_, Biomes.f_48181_, Biomes.f_48182_, Biomes.f_48183_, Biomes.f_48184_, Biomes.f_48185_, Biomes.f_48186_, Biomes.f_48187_, Biomes.f_48188_, Biomes.f_48189_, Biomes.f_48190_, Biomes.f_48191_, Biomes.f_48192_, Biomes.f_48193_, Biomes.f_48194_, Biomes.f_48195_, Biomes.f_48196_);
@@ -33,9 +_,9 @@
    private final Registry<Biome> f_48587_;
 
    public OverworldBiomeSource(long p_48590_, boolean p_48591_, boolean p_48592_, Registry<Biome> p_48593_) {
-      super(f_48583_.stream().map((p_48603_) -> {
+      super(java.util.stream.Stream.concat(f_48583_.stream(), net.minecraftforge.common.BiomeManager.getAdditionalOverworldBiomes().stream()).map((p_242638_1_) -> {
          return () -> {
-            return p_48593_.m_123013_(p_48603_);
+            return p_48593_.m_123013_(p_242638_1_);
          };
       }));
       this.f_48584_ = p_48590_;

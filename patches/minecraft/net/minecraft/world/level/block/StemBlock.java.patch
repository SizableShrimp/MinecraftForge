--- a/net/minecraft/world/level/block/StemBlock.java
+++ b/net/minecraft/world/level/block/StemBlock.java
@@ -18,15 +_,13 @@
 import net.minecraft.world.level.block.state.properties.IntegerProperty;
 import net.minecraft.world.phys.shapes.CollisionContext;
 import net.minecraft.world.phys.shapes.VoxelShape;
-import net.minecraftforge.api.distmarker.Dist;
-import net.minecraftforge.api.distmarker.OnlyIn;
 
 public class StemBlock extends BushBlock implements BonemealableBlock {
    public static final IntegerProperty f_57013_ = BlockStateProperties.f_61409_;
    protected static final VoxelShape[] f_57014_ = new VoxelShape[]{Block.m_49796_(7.0D, 0.0D, 7.0D, 9.0D, 2.0D, 9.0D), Block.m_49796_(7.0D, 0.0D, 7.0D, 9.0D, 4.0D, 9.0D), Block.m_49796_(7.0D, 0.0D, 7.0D, 9.0D, 6.0D, 9.0D), Block.m_49796_(7.0D, 0.0D, 7.0D, 9.0D, 8.0D, 9.0D), Block.m_49796_(7.0D, 0.0D, 7.0D, 9.0D, 10.0D, 9.0D), Block.m_49796_(7.0D, 0.0D, 7.0D, 9.0D, 12.0D, 9.0D), Block.m_49796_(7.0D, 0.0D, 7.0D, 9.0D, 14.0D, 9.0D), Block.m_49796_(7.0D, 0.0D, 7.0D, 9.0D, 16.0D, 9.0D)};
    private final StemGrownBlock f_57015_;
 
-   protected StemBlock(StemGrownBlock p_57018_, BlockBehaviour.Properties p_57019_) {
+   public StemBlock(StemGrownBlock p_57018_, BlockBehaviour.Properties p_57019_) {
       super(p_57019_);
       this.f_57015_ = p_57018_;
       this.m_49959_(this.f_49792_.m_61090_().m_61124_(f_57013_, Integer.valueOf(0)));
@@ -41,29 +_,30 @@
    }
 
    public void m_7455_(BlockState p_57042_, ServerLevel p_57043_, BlockPos p_57044_, Random p_57045_) {
+      if (!p_57043_.isAreaLoaded(p_57044_, 1)) return; // Forge: prevent loading unloaded chunks when checking neighbor's light
       if (p_57043_.m_45524_(p_57044_, 0) >= 9) {
          float f = CropBlock.m_52272_(this, p_57043_, p_57044_);
-         if (p_57045_.nextInt((int)(25.0F / f) + 1) == 0) {
+         if (net.minecraftforge.common.ForgeHooks.onCropsGrowPre(p_57043_, p_57044_, p_57042_, p_57045_.nextInt((int)(25.0F / f) + 1) == 0)) {
             int i = p_57042_.m_61143_(f_57013_);
             if (i < 7) {
-               p_57042_ = p_57042_.m_61124_(f_57013_, Integer.valueOf(i + 1));
-               p_57043_.m_7731_(p_57044_, p_57042_, 2);
+               p_57043_.m_7731_(p_57044_, p_57042_.m_61124_(f_57013_, Integer.valueOf(i + 1)), 2);
             } else {
                Direction direction = Direction.Plane.HORIZONTAL.m_122560_(p_57045_);
                BlockPos blockpos = p_57044_.m_121945_(direction);
                BlockState blockstate = p_57043_.m_8055_(blockpos.m_7495_());
-               if (p_57043_.m_8055_(blockpos).m_60795_() && (blockstate.m_60713_(Blocks.f_50093_) || blockstate.m_60713_(Blocks.f_50493_) || blockstate.m_60713_(Blocks.f_50546_) || blockstate.m_60713_(Blocks.f_50599_) || blockstate.m_60713_(Blocks.f_50440_))) {
+               Block block = blockstate.m_60734_();
+               if (p_57043_.m_46859_(blockpos) && (blockstate.canSustainPlant(p_57043_, blockpos.m_7495_(), Direction.UP, this) || block == Blocks.f_50093_ || block == Blocks.f_50493_ || block == Blocks.f_50546_ || block == Blocks.f_50599_ || block == Blocks.f_50440_)) {
                   p_57043_.m_46597_(blockpos, this.f_57015_.m_49966_());
                   p_57043_.m_46597_(p_57044_, this.f_57015_.m_7810_().m_49966_().m_61124_(HorizontalDirectionalBlock.f_54117_, direction));
                }
             }
+            net.minecraftforge.common.ForgeHooks.onCropsGrowPost(p_57043_, p_57044_, p_57042_);
          }
 
       }
    }
 
    @Nullable
-   @OnlyIn(Dist.CLIENT)
    protected Item m_57051_() {
       if (this.f_57015_ == Blocks.f_50133_) {
          return Items.f_42577_;
@@ -72,7 +_,6 @@
       }
    }
 
-   @OnlyIn(Dist.CLIENT)
    public ItemStack m_7397_(BlockGetter p_57026_, BlockPos p_57027_, BlockState p_57028_) {
       Item item = this.m_57051_();
       return item == null ? ItemStack.f_41583_ : new ItemStack(item);
@@ -102,5 +_,11 @@
 
    public StemGrownBlock m_57056_() {
       return this.f_57015_;
+   }
+
+   //FORGE START
+   @Override
+   public net.minecraftforge.common.PlantType getPlantType(BlockGetter world, BlockPos pos) {
+      return net.minecraftforge.common.PlantType.CROP;
    }
 }

--- a/net/minecraft/server/network/TextFilterClient.java
+++ b/net/minecraft/server/network/TextFilterClient.java
@@ -30,8 +_,8 @@
 public class TextFilterClient implements AutoCloseable {
    private static final Logger f_10098_ = LogManager.getLogger();
    private static final AtomicInteger f_10099_ = new AtomicInteger(1);
-   private static final ThreadFactory f_10100_ = (p_10148_) -> {
-      Thread thread = new Thread(p_10148_);
+   private static final ThreadFactory f_10100_ = (p_244570_0_) -> {
+      Thread thread = new Thread(p_244570_0_);
       thread.setName("Chat-Filter-Worker-" + f_10099_.getAndIncrement());
       return thread;
    };
@@ -167,16 +_,22 @@
    }
 
    private TextFilterClient() {
-      throw new RuntimeException("Synthetic constructor do not call");
+      throw new RuntimeException("Synthetic constructor added by MCP, do not call");
+   }
+
+   public static class RequestFailedException extends RuntimeException {
+      private RequestFailedException(String p_10199_) {
+         super(p_10199_);
+      }
    }
 
    @FunctionalInterface
    public interface IgnoreStrategy {
-      TextFilterClient.IgnoreStrategy f_10162_ = (p_10169_, p_10170_) -> {
+      TextFilterClient.IgnoreStrategy f_10162_ = (p_244583_0_, p_244583_1_) -> {
          return false;
       };
-      TextFilterClient.IgnoreStrategy f_10163_ = (p_10166_, p_10167_) -> {
-         return p_10166_.length() == p_10167_;
+      TextFilterClient.IgnoreStrategy f_10163_ = (p_244581_0_, p_244581_1_) -> {
+         return p_244581_0_.length() == p_244581_1_;
       };
 
       boolean m_10171_(String p_10172_, int p_10173_);
@@ -201,26 +_,20 @@
       }
 
       public CompletableFuture<Optional<List<String>>> m_5925_(List<String> p_10190_) {
-         List<CompletableFuture<Optional<String>>> list = p_10190_.stream().map((p_10195_) -> {
-            return TextFilterClient.this.m_10136_(this.f_10175_, p_10195_, TextFilterClient.this.f_10107_, this.f_10176_);
+         List<CompletableFuture<Optional<String>>> list = p_10190_.stream().map((p_244589_1_) -> {
+            return TextFilterClient.this.m_10136_(this.f_10175_, p_244589_1_, TextFilterClient.this.f_10107_, this.f_10176_);
          }).collect(ImmutableList.toImmutableList());
-         return Util.m_137567_(list).thenApply((p_10197_) -> {
-            return Optional.<List<String>>of(p_10197_.stream().map((p_10192_) -> {
-               return p_10192_.orElse("");
+         return Util.m_137567_(list).thenApply((p_244590_0_) -> {
+            return Optional.<List<String>>of(p_244590_0_.stream().map((p_244588_0_) -> {
+               return p_244588_0_.orElse("");
             }).collect(ImmutableList.toImmutableList()));
-         }).exceptionally((p_10188_) -> {
+         }).exceptionally((p_244587_0_) -> {
             return Optional.empty();
          });
       }
 
       public CompletableFuture<Optional<String>> m_6770_(String p_10186_) {
          return TextFilterClient.this.m_10136_(this.f_10175_, p_10186_, TextFilterClient.this.f_10107_, this.f_10176_);
-      }
-   }
-
-   public static class RequestFailedException extends RuntimeException {
-      private RequestFailedException(String p_10199_) {
-         super(p_10199_);
       }
    }
 }

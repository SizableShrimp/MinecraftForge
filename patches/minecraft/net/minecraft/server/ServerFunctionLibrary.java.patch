--- a/net/minecraft/server/ServerFunctionLibrary.java
+++ b/net/minecraft/server/ServerFunctionLibrary.java
@@ -67,14 +_,14 @@
    public CompletableFuture<Void> m_5540_(PreparableReloadListener.PreparationBarrier p_136057_, ResourceManager p_136058_, ProfilerFiller p_136059_, ProfilerFiller p_136060_, Executor p_136061_, Executor p_136062_) {
       CompletableFuture<Map<ResourceLocation, Tag.Builder>> completablefuture = this.f_136047_.m_13458_(p_136058_, p_136061_);
       CompletableFuture<Map<ResourceLocation, CompletableFuture<CommandFunction>>> completablefuture1 = CompletableFuture.supplyAsync(() -> {
-         return p_136058_.m_6540_("functions", (p_136084_) -> {
-            return p_136084_.endsWith(".mcfunction");
+         return p_136058_.m_6540_("functions", (p_240938_0_) -> {
+            return p_240938_0_.endsWith(".mcfunction");
          });
-      }, p_136061_).thenCompose((p_136068_) -> {
+      }, p_136061_).thenCompose((p_240933_3_) -> {
          Map<ResourceLocation, CompletableFuture<CommandFunction>> map = Maps.newHashMap();
          CommandSourceStack commandsourcestack = new CommandSourceStack(CommandSource.f_80164_, Vec3.f_82478_, Vec2.f_82462_, (ServerLevel)null, this.f_136049_, "", TextComponent.f_131282_, (MinecraftServer)null, (Entity)null);
 
-         for(ResourceLocation resourcelocation : p_136068_) {
+         for(ResourceLocation resourcelocation : p_240933_3_) {
             String s = resourcelocation.m_135815_();
             ResourceLocation resourcelocation1 = new ResourceLocation(resourcelocation.m_135827_(), s.substring(f_136044_, s.length() - f_136045_));
             map.put(resourcelocation1, CompletableFuture.supplyAsync(() -> {
@@ -84,26 +_,26 @@
          }
 
          CompletableFuture<?>[] completablefuture2 = map.values().toArray(new CompletableFuture[0]);
-         return CompletableFuture.allOf(completablefuture2).handle((p_136087_, p_136088_) -> {
+         return CompletableFuture.allOf(completablefuture2).handle((p_240939_1_, p_240939_2_) -> {
             return map;
          });
       });
-      return completablefuture.thenCombine(completablefuture1, Pair::of).thenCompose(p_136057_::m_6769_).thenAcceptAsync((p_136082_) -> {
-         Map<ResourceLocation, CompletableFuture<CommandFunction>> map = (Map)p_136082_.getSecond();
+      return completablefuture.thenCombine(completablefuture1, Pair::of).thenCompose(p_136057_::m_6769_).thenAcceptAsync((p_240937_1_) -> {
+         Map<ResourceLocation, CompletableFuture<CommandFunction>> map = (Map)p_240937_1_.getSecond();
          Builder<ResourceLocation, CommandFunction> builder = ImmutableMap.builder();
-         map.forEach((p_136079_, p_136080_) -> {
-            p_136080_.handle((p_136094_, p_136095_) -> {
-               if (p_136095_ != null) {
-                  f_136043_.error("Failed to load function {}", p_136079_, p_136095_);
+         map.forEach((p_240936_1_, p_240936_2_) -> {
+            p_240936_2_.handle((p_240941_2_, p_240941_3_) -> {
+               if (p_240941_3_ != null) {
+                  f_136043_.error("Failed to load function {}", p_240936_1_, p_240941_3_);
                } else {
-                  builder.put(p_136079_, p_136094_);
+                  builder.put(p_240936_1_, p_240941_2_);
                }
 
                return null;
             }).join();
          });
          this.f_136046_ = builder.build();
-         this.f_136048_ = this.f_136047_.m_13463_((Map)p_136082_.getFirst());
+         this.f_136048_ = this.f_136047_.m_13463_((Map)p_240937_1_.getFirst());
       }, p_136062_);
    }
 

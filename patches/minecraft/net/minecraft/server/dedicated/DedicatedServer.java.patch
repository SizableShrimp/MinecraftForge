--- a/net/minecraft/server/dedicated/DedicatedServer.java
+++ b/net/minecraft/server/dedicated/DedicatedServer.java
@@ -62,7 +_,7 @@
 public class DedicatedServer extends MinecraftServer implements ServerInterface {
    private static final Logger f_139598_ = LogManager.getLogger();
    private static final Pattern f_139599_ = Pattern.compile("^[a-fA-F0-9]{40}$");
-   private final List<ConsoleInput> f_139600_ = Collections.synchronizedList(Lists.newArrayList());
+   public final List<ConsoleInput> f_139600_ = Collections.synchronizedList(Lists.newArrayList());
    private QueryThreadGs4 f_139601_;
    private final RconConsoleSource f_139602_;
    private RconThread f_139603_;
@@ -82,6 +_,7 @@
    public boolean m_7038_() throws IOException {
       Thread thread = new Thread("Server console handler") {
          public void run() {
+            if (net.minecraftforge.server.console.TerminalHandler.handleCommands(DedicatedServer.this)) return;
             BufferedReader bufferedreader = new BufferedReader(new InputStreamReader(System.in, StandardCharsets.UTF_8));
 
             String s1;
@@ -163,11 +_,13 @@
          SkullBlockEntity.m_59764_(this.m_129927_());
          SkullBlockEntity.m_59771_(this.m_129925_());
          GameProfileCache.m_11004_(this.m_129797_());
+         if (!net.minecraftforge.fml.server.ServerLifecycleHooks.handleServerAboutToStart(this)) return false;
          f_139598_.info("Preparing level \"{}\"", (Object)this.m_7123_());
          this.m_130006_();
          long j = Util.m_137569_() - i;
          String s = String.format(Locale.ROOT, "%.3fs", (double)j / 1.0E9D);
          f_139598_.info("Done ({})! For help, type \"help\"", (Object)s);
+         this.f_129726_ = Util.m_137550_(); //Forge: Update server time to prevent watchdog/spaming during long load.
          if (dedicatedserverproperties.f_139744_ != null) {
             this.m_129900_().m_46170_(GameRules.f_46153_).m_46246_(dedicatedserverproperties.f_139744_, this);
          }
@@ -191,11 +_,12 @@
          }
 
          Items.f_41852_.m_6787_(CreativeModeTab.f_40754_, NonNullList.m_122779_());
+         // <3 you Grum for this, saves us ~30 patch files! --^
          if (dedicatedserverproperties.f_139721_) {
             MinecraftServerStatistics.m_18328_(this);
          }
 
-         return true;
+         return net.minecraftforge.fml.server.ServerLifecycleHooks.handleServerStarting(this);
       }
    }
 
@@ -398,8 +_,8 @@
 
    public void m_7196_(int p_139676_) {
       super.m_7196_(p_139676_);
-      this.f_139604_.m_139778_((p_139628_) -> {
-         return p_139628_.f_139725_.m_139895_(this.m_129911_(), p_139676_);
+      this.f_139604_.m_139778_((p_213224_2_) -> {
+         return p_213224_2_.f_139725_.m_139895_(this.m_129911_(), p_139676_);
       });
    }
 
@@ -502,8 +_,8 @@
    }
 
    public void m_139688_(boolean p_139689_) {
-      this.f_139604_.m_139778_((p_139650_) -> {
-         return p_139650_.f_139726_.m_139895_(this.m_129911_(), p_139689_);
+      this.f_139604_.m_139778_((p_213222_2_) -> {
+         return p_213222_2_.f_139726_.m_139895_(this.m_129911_(), p_139689_);
       });
    }
 
@@ -514,6 +_,11 @@
 
    public boolean m_7779_(GameProfile p_139642_) {
       return false;
+   }
+
+   @Override //Forge: Enable formated text for colors in console.
+   public void m_6352_(net.minecraft.network.chat.Component message, java.util.UUID p_145747_2_) {
+      f_139598_.info(message.getString());
    }
 
    public int m_7186_(int p_139659_) {

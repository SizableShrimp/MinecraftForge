--- a/net/minecraft/network/ConnectionProtocol.java
+++ b/net/minecraft/network/ConnectionProtocol.java
@@ -219,12 +_,12 @@
          }
 
          f_129571_[i - -1] = connectionprotocol;
-         connectionprotocol.f_129574_.forEach((p_129590_, p_129591_) -> {
-            p_129591_.m_129609_().forEach((p_129587_) -> {
-               if (f_129572_.containsKey(p_129587_) && f_129572_.get(p_129587_) != connectionprotocol) {
-                  throw new IllegalStateException("Packet " + p_129587_ + " is already assigned to protocol " + f_129572_.get(p_129587_) + " - can't reassign to " + connectionprotocol);
+         connectionprotocol.f_129574_.forEach((p_229713_1_, p_229713_2_) -> {
+            p_229713_2_.m_129609_().forEach((p_229712_1_) -> {
+               if (f_129572_.containsKey(p_229712_1_) && f_129572_.get(p_229712_1_) != connectionprotocol) {
+                  throw new IllegalStateException("Packet " + p_229712_1_ + " is already assigned to protocol " + f_129572_.get(p_229712_1_) + " - can't reassign to " + connectionprotocol);
                } else {
-                  f_129572_.put(p_129587_, connectionprotocol);
+                  f_129572_.put(p_229712_1_, connectionprotocol);
                }
             });
          });
@@ -233,8 +_,8 @@
    }
 
    static class PacketSet<T extends PacketListener> {
-      private final Object2IntMap<Class<? extends Packet<T>>> f_129604_ = Util.m_137469_(new Object2IntOpenHashMap<>(), (p_129613_) -> {
-         p_129613_.defaultReturnValue(-1);
+      private final Object2IntMap<Class<? extends Packet<T>>> f_129604_ = Util.m_137469_(new Object2IntOpenHashMap<>(), (p_229719_0_) -> {
+         p_229719_0_.defaultReturnValue(-1);
       });
       private final List<Supplier<? extends Packet<T>>> f_129605_ = Lists.newArrayList();
 

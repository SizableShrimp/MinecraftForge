--- a/net/minecraft/tags/StaticTags.java
+++ b/net/minecraft/tags/StaticTags.java
@@ -51,4 +_,23 @@
          throw new IllegalStateException("Missing helper registrations");
       }
    }
+
+   @javax.annotation.Nullable
+   public static StaticTagHelper<?> get(ResourceLocation rl) {
+      return f_13264_.get(rl);
+   }
+
+   public static Multimap<ResourceLocation, ResourceLocation> validateVanillaTags(TagContainer tagCollectionSupplier) {
+      Multimap<ResourceLocation, ResourceLocation> missingTags = HashMultimap.create();
+      for (java.util.Map.Entry<ResourceLocation, StaticTagHelper<?>> entry : f_13264_.entrySet()) {
+         if (!net.minecraftforge.common.ForgeTagHandler.getCustomTagTypeNames().contains(entry.getKey())) {
+            missingTags.putAll(entry.getKey(), entry.getValue().m_13247_(tagCollectionSupplier));
+         }
+      }
+      return missingTags;
+   }
+
+   public static void fetchCustomTagTypes(TagContainer tagCollectionSupplier) {
+      net.minecraftforge.common.ForgeTagHandler.getCustomTagTypeNames().forEach(tagRegistry -> f_13264_.get(tagRegistry).m_13242_(tagCollectionSupplier));
+   }
 }

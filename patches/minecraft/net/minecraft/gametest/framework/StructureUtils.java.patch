--- a/net/minecraft/gametest/framework/StructureUtils.java
+++ b/net/minecraft/gametest/framework/StructureUtils.java
@@ -133,14 +_,14 @@
 
    public static void m_127849_(BoundingBox p_127850_, int p_127851_, ServerLevel p_127852_) {
       BoundingBox boundingbox = new BoundingBox(p_127850_.f_70988_ - 2, p_127850_.f_70989_ - 3, p_127850_.f_70990_ - 3, p_127850_.f_70991_ + 3, p_127850_.f_70992_ + 20, p_127850_.f_70993_ + 3);
-      BlockPos.m_121919_(boundingbox).forEach((p_127840_) -> {
-         m_127841_(p_127851_, p_127840_, p_127852_);
+      BlockPos.m_121919_(boundingbox).forEach((p_229592_2_) -> {
+         m_127841_(p_127851_, p_229592_2_, p_127852_);
       });
       p_127852_.m_6219_().m_47232_(boundingbox, true, false);
       p_127852_.m_8722_(boundingbox);
       AABB aabb = new AABB((double)boundingbox.f_70988_, (double)boundingbox.f_70989_, (double)boundingbox.f_70990_, (double)boundingbox.f_70991_, (double)boundingbox.f_70992_, (double)boundingbox.f_70993_);
-      List<Entity> list = p_127852_.m_6443_(Entity.class, aabb, (p_127846_) -> {
-         return !(p_127846_ instanceof Player);
+      List<Entity> list = p_127852_.m_6443_(Entity.class, aabb, (p_229593_0_) -> {
+         return !(p_229593_0_ instanceof Player);
       });
       list.forEach(Entity::m_6091_);
    }
@@ -157,15 +_,15 @@
    }
 
    public static Optional<BlockPos> m_127853_(BlockPos p_127854_, int p_127855_, ServerLevel p_127856_) {
-      return m_127910_(p_127854_, p_127855_, p_127856_).stream().filter((p_127863_) -> {
-         return m_127867_(p_127863_, p_127854_, p_127856_);
+      return m_127910_(p_127854_, p_127855_, p_127856_).stream().filter((p_229601_2_) -> {
+         return m_127867_(p_229601_2_, p_127854_, p_127856_);
       }).findFirst();
    }
 
    @Nullable
    public static BlockPos m_127906_(BlockPos p_127907_, int p_127908_, ServerLevel p_127909_) {
-      Comparator<BlockPos> comparator = Comparator.comparingInt((p_127866_) -> {
-         return p_127866_.m_123333_(p_127907_);
+      Comparator<BlockPos> comparator = Comparator.comparingInt((p_229597_1_) -> {
+         return p_229597_1_.m_123333_(p_127907_);
       });
       Collection<BlockPos> collection = m_127910_(p_127907_, p_127908_, p_127909_);
       Optional<BlockPos> optional = collection.stream().min(comparator);

--- a/net/minecraft/resources/RegistryReadOps.java
+++ b/net/minecraft/resources/RegistryReadOps.java
@@ -168,13 +_,6 @@
       });
    }
 
-   static final class ReadCache<E> {
-      private final Map<ResourceKey<E>, DataResult<Supplier<E>>> f_135708_ = Maps.newIdentityHashMap();
-
-      private ReadCache() {
-      }
-   }
-
    public interface ResourceAccess {
       Collection<ResourceLocation> m_7115_(ResourceKey<? extends Registry<?>> p_135720_);
 
@@ -183,8 +_,8 @@
       static RegistryReadOps.ResourceAccess m_135714_(final ResourceManager p_135715_) {
          return new RegistryReadOps.ResourceAccess() {
             public Collection<ResourceLocation> m_7115_(ResourceKey<? extends Registry<?>> p_135734_) {
-               return p_135715_.m_6540_(p_135734_.m_135782_().m_135815_(), (p_135732_) -> {
-                  return p_135732_.endsWith(".json");
+               return p_135715_.m_6540_(p_135734_.m_135782_().m_135815_(), (p_244348_0_) -> {
+                  return p_244348_0_.endsWith(".json");
                });
             }
 
@@ -198,8 +_,9 @@
                ) {
                   JsonParser jsonparser = new JsonParser();
                   JsonElement jsonelement = jsonparser.parse(reader);
-                  return p_135728_.parse(p_135725_, jsonelement).map((p_135730_) -> {
-                     return Pair.of(p_135730_, OptionalInt.empty());
+                  if (jsonelement!= null) jsonelement.getAsJsonObject().addProperty("forge:registry_name", p_135727_.m_135782_().toString());
+                  return p_135728_.parse(p_135725_, jsonelement).map((p_244347_0_) -> {
+                     return Pair.of(p_244347_0_, OptionalInt.empty());
                   });
                } catch (JsonIOException | JsonSyntaxException | IOException ioexception) {
                   return DataResult.error("Failed to parse " + resourcelocation1 + " file: " + ioexception.getMessage());
@@ -230,19 +_,27 @@
          }
 
          public Collection<ResourceLocation> m_7115_(ResourceKey<? extends Registry<?>> p_135753_) {
-            return this.f_135736_.keySet().stream().filter((p_135762_) -> {
-               return p_135762_.m_135783_(p_135753_);
-            }).map((p_135759_) -> {
-               return new ResourceLocation(p_135759_.m_135782_().m_135827_(), p_135753_.m_135782_().m_135815_() + "/" + p_135759_.m_135782_().m_135815_() + ".json");
+            return this.f_135736_.keySet().stream().filter((p_244355_1_) -> {
+               return p_244355_1_.m_135783_(p_135753_);
+            }).map((p_244354_1_) -> {
+               return new ResourceLocation(p_244354_1_.m_135782_().m_135827_(), p_135753_.m_135782_().m_135815_() + "/" + p_244354_1_.m_135782_().m_135815_() + ".json");
             }).collect(Collectors.toList());
          }
 
          public <E> DataResult<Pair<E, OptionalInt>> m_8082_(DynamicOps<JsonElement> p_135741_, ResourceKey<? extends Registry<E>> p_135742_, ResourceKey<E> p_135743_, Decoder<E> p_135744_) {
             JsonElement jsonelement = this.f_135736_.get(p_135743_);
-            return jsonelement == null ? DataResult.error("Unknown element: " + p_135743_) : p_135744_.parse(p_135741_, jsonelement).setLifecycle(this.f_135738_.get(p_135743_)).map((p_135756_) -> {
-               return Pair.of(p_135756_, OptionalInt.of(this.f_135737_.getInt(p_135743_)));
+            if (jsonelement!= null) jsonelement.getAsJsonObject().addProperty("forge:registry_name", p_135743_.m_135782_().toString());
+            return jsonelement == null ? DataResult.error("Unknown element: " + p_135743_) : p_135744_.parse(p_135741_, jsonelement).setLifecycle(this.f_135738_.get(p_135743_)).map((p_244353_2_) -> {
+               return Pair.of(p_244353_2_, OptionalInt.of(this.f_135737_.getInt(p_135743_)));
             });
          }
+      }
+   }
+
+   static final class ReadCache<E> {
+      private final Map<ResourceKey<E>, DataResult<Supplier<E>>> f_135708_ = Maps.newIdentityHashMap();
+
+      private ReadCache() {
       }
    }
 }

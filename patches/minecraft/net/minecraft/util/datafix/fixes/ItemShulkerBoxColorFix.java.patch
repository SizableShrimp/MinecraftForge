--- a/net/minecraft/util/datafix/fixes/ItemShulkerBoxColorFix.java
+++ b/net/minecraft/util/datafix/fixes/ItemShulkerBoxColorFix.java
@@ -25,10 +_,10 @@
       OpticFinder<Pair<String, String>> opticfinder = DSL.fieldFinder("id", DSL.named(References.f_16788_.typeName(), NamespacedSchema.m_17310_()));
       OpticFinder<?> opticfinder1 = type.findField("tag");
       OpticFinder<?> opticfinder2 = opticfinder1.type().findField("BlockEntityTag");
-      return this.fixTypeEverywhereTyped("ItemShulkerBoxColorFix", type, (p_16029_) -> {
-         Optional<Pair<String, String>> optional = p_16029_.getOptional(opticfinder);
+      return this.fixTypeEverywhereTyped("ItemShulkerBoxColorFix", type, (p_206358_3_) -> {
+         Optional<Pair<String, String>> optional = p_206358_3_.getOptional(opticfinder);
          if (optional.isPresent() && Objects.equals(optional.get().getSecond(), "minecraft:shulker_box")) {
-            Optional<? extends Typed<?>> optional1 = p_16029_.getOptionalTyped(opticfinder1);
+            Optional<? extends Typed<?>> optional1 = p_206358_3_.getOptionalTyped(opticfinder1);
             if (optional1.isPresent()) {
                Typed<?> typed = optional1.get();
                Optional<? extends Typed<?>> optional2 = typed.getOptionalTyped(opticfinder2);
@@ -37,12 +_,12 @@
                   Dynamic<?> dynamic = typed1.get(DSL.remainderFinder());
                   int i = dynamic.get("Color").asInt(0);
                   dynamic.remove("Color");
-                  return p_16029_.set(opticfinder1, typed.set(opticfinder2, typed1.set(DSL.remainderFinder(), dynamic))).set(opticfinder, Pair.of(References.f_16788_.typeName(), f_16020_[i % 16]));
+                  return p_206358_3_.set(opticfinder1, typed.set(opticfinder2, typed1.set(DSL.remainderFinder(), dynamic))).set(opticfinder, Pair.of(References.f_16788_.typeName(), f_16020_[i % 16]));
                }
             }
          }
 
-         return p_16029_;
+         return p_206358_3_;
       });
    }
 }

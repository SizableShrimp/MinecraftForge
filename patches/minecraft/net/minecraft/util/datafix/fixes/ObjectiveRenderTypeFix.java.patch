--- a/net/minecraft/util/datafix/fixes/ObjectiveRenderTypeFix.java
+++ b/net/minecraft/util/datafix/fixes/ObjectiveRenderTypeFix.java
@@ -25,16 +_,16 @@
       if (!Objects.equals(type, this.getInputSchema().getType(References.f_16791_))) {
          throw new IllegalStateException("Objective type is not what was expected.");
       } else {
-         return this.fixTypeEverywhere("ObjectiveRenderTypeFix", type, (p_16543_) -> {
-            return (p_16539_) -> {
-               return p_16539_.mapSecond((p_16541_) -> {
-                  Optional<String> optional = p_16541_.get("RenderType").asString().result();
+         return this.fixTypeEverywhere("ObjectiveRenderTypeFix", type, (p_211859_0_) -> {
+            return (p_211860_0_) -> {
+               return p_211860_0_.mapSecond((p_211857_0_) -> {
+                  Optional<String> optional = p_211857_0_.get("RenderType").asString().result();
                   if (!optional.isPresent()) {
-                     String s = p_16541_.get("CriteriaName").asString("");
+                     String s = p_211857_0_.get("CriteriaName").asString("");
                      ObjectiveCriteria.RenderType objectivecriteria$rendertype = m_16544_(s);
-                     return p_16541_.set("RenderType", p_16541_.createString(objectivecriteria$rendertype.m_83633_()));
+                     return p_211857_0_.set("RenderType", p_211857_0_.createString(objectivecriteria$rendertype.m_83633_()));
                   } else {
-                     return p_16541_;
+                     return p_211857_0_;
                   }
                });
             };

--- a/net/minecraft/util/datafix/fixes/ChunkBiomeFix.java
+++ b/net/minecraft/util/datafix/fixes/ChunkBiomeFix.java
@@ -18,12 +_,12 @@
    protected TypeRewriteRule makeRule() {
       Type<?> type = this.getInputSchema().getType(References.f_16773_);
       OpticFinder<?> opticfinder = type.findField("Level");
-      return this.fixTypeEverywhereTyped("Leaves fix", type, (p_15018_) -> {
-         return p_15018_.updateTyped(opticfinder, (p_15020_) -> {
-            return p_15020_.update(DSL.remainderFinder(), (p_15022_) -> {
-               Optional<IntStream> optional = p_15022_.get("Biomes").asIntStreamOpt().result();
+      return this.fixTypeEverywhereTyped("Leaves fix", type, (p_226193_1_) -> {
+         return p_226193_1_.updateTyped(opticfinder, (p_226194_0_) -> {
+            return p_226194_0_.update(DSL.remainderFinder(), (p_226192_0_) -> {
+               Optional<IntStream> optional = p_226192_0_.get("Biomes").asIntStreamOpt().result();
                if (!optional.isPresent()) {
-                  return p_15022_;
+                  return p_226192_0_;
                } else {
                   int[] aint = optional.get().toArray();
                   int[] aint1 = new int[1024];
@@ -41,7 +_,7 @@
                      System.arraycopy(aint1, 0, aint1, j1 * 16, 16);
                   }
 
-                  return p_15022_.set("Biomes", p_15022_.createIntList(Arrays.stream(aint1)));
+                  return p_226192_0_.set("Biomes", p_226192_0_.createIntList(Arrays.stream(aint1)));
                }
             });
          });

--- a/net/minecraft/util/datafix/fixes/StatsCounterFix.java
+++ b/net/minecraft/util/datafix/fixes/StatsCounterFix.java
@@ -30,8 +_,8 @@
 
    public TypeRewriteRule makeRule() {
       Type<?> type = this.getOutputSchema().getType(References.f_16777_);
-      return this.fixTypeEverywhereTyped("StatsCounterFix", this.getInputSchema().getType(References.f_16777_), type, (p_16944_) -> {
-         Dynamic<?> dynamic = p_16944_.get(DSL.remainderFinder());
+      return this.fixTypeEverywhereTyped("StatsCounterFix", this.getInputSchema().getType(References.f_16777_), type, (p_209680_2_) -> {
+         Dynamic<?> dynamic = p_209680_2_.get(DSL.remainderFinder());
          Map<Dynamic<?>, Dynamic<?>> map = Maps.newHashMap();
          Optional<? extends Map<? extends Dynamic<?>, ? extends Dynamic<?>>> optional = dynamic.getMapValues().result();
          if (optional.isPresent()) {
@@ -87,7 +_,7 @@
                }
 
                Dynamic<?> dynamic1 = dynamic.createString(s1);
-               Dynamic<?> dynamic2 = map.computeIfAbsent(dynamic1, (p_16947_) -> {
+               Dynamic<?> dynamic2 = map.computeIfAbsent(dynamic1, (p_209679_1_) -> {
                   return dynamic.emptyMap();
                });
                map.put(dynamic1, dynamic2.set(s2, entry.getValue()));

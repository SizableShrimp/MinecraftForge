--- a/net/minecraft/util/datafix/fixes/WallPropertyFix.java
+++ b/net/minecraft/util/datafix/fixes/WallPropertyFix.java
@@ -17,8 +_,8 @@
    }
 
    public TypeRewriteRule makeRule() {
-      return this.fixTypeEverywhereTyped("WallPropertyFix", this.getInputSchema().getType(References.f_16783_), (p_17157_) -> {
-         return p_17157_.update(DSL.remainderFinder(), WallPropertyFix::m_17158_);
+      return this.fixTypeEverywhereTyped("WallPropertyFix", this.getInputSchema().getType(References.f_16783_), (p_233416_0_) -> {
+         return p_233416_0_.update(DSL.remainderFinder(), WallPropertyFix::m_17158_);
       });
    }
 
@@ -27,15 +_,15 @@
    }
 
    private static <T> Dynamic<T> m_17160_(Dynamic<T> p_17161_, String p_17162_) {
-      return p_17161_.update(p_17162_, (p_17168_) -> {
-         return DataFixUtils.orElse(p_17168_.asString().result().map(WallPropertyFix::m_17163_).map(p_17168_::createString), p_17168_);
+      return p_17161_.update(p_17162_, (p_233421_0_) -> {
+         return DataFixUtils.orElse(p_233421_0_.asString().result().map(WallPropertyFix::m_17163_).map(p_233421_0_::createString), p_233421_0_);
       });
    }
 
    private static <T> Dynamic<T> m_17158_(Dynamic<T> p_17159_) {
       boolean flag = p_17159_.get("Name").asString().result().filter(f_17151_::contains).isPresent();
-      return !flag ? p_17159_ : p_17159_.update("Properties", (p_17166_) -> {
-         Dynamic<?> dynamic = m_17160_(p_17166_, "east");
+      return !flag ? p_17159_ : p_17159_.update("Properties", (p_233420_0_) -> {
+         Dynamic<?> dynamic = m_17160_(p_233420_0_, "east");
          dynamic = m_17160_(dynamic, "west");
          dynamic = m_17160_(dynamic, "north");
          return m_17160_(dynamic, "south");

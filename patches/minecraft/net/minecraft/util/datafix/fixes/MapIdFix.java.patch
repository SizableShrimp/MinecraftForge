--- a/net/minecraft/util/datafix/fixes/MapIdFix.java
+++ b/net/minecraft/util/datafix/fixes/MapIdFix.java
@@ -18,10 +_,10 @@
    protected TypeRewriteRule makeRule() {
       Type<?> type = this.getInputSchema().getType(References.f_16778_);
       OpticFinder<?> opticfinder = type.findField("data");
-      return this.fixTypeEverywhereTyped("Map id fix", type, (p_16400_) -> {
-         Optional<? extends Typed<?>> optional = p_16400_.getOptionalTyped(opticfinder);
-         return optional.isPresent() ? p_16400_ : p_16400_.update(DSL.remainderFinder(), (p_16402_) -> {
-            return p_16402_.createMap(ImmutableMap.of(p_16402_.createString("data"), p_16402_));
+      return this.fixTypeEverywhereTyped("Map id fix", type, (p_219839_1_) -> {
+         Optional<? extends Typed<?>> optional = p_219839_1_.getOptionalTyped(opticfinder);
+         return optional.isPresent() ? p_219839_1_ : p_219839_1_.update(DSL.remainderFinder(), (p_219838_0_) -> {
+            return p_219838_0_.createMap(ImmutableMap.of(p_219838_0_.createString("data"), p_219838_0_));
          });
       });
    }
